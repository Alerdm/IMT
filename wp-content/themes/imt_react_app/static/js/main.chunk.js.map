{"version":3,"file":"static/js/main.chunk.js","sources":["webpack:///./src/App.css?d002","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/App.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/ActiveSection.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/Columna.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/FootBar.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/Loading.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/Main.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/MainCourses.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/MainCoursesCard.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/NavBarBottom.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/NewsCarousel.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/NewsCarouselCard.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/Nosotros.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/Publications.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/PublicationsFeed.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/PublicationsFeedCard.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/PublicationsFeedCourses.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/PublicationsFeedVideos.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/TopBar.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/components/Topic.js","webpack:///./src/index.css?4073","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/index.js","C:/xampp/htdocs/imtwp/wp-content/themes/imt_react_app/react-src/src/serviceWorker.js"],"sourcesContent":["// extracted by mini-css-extract-plugin","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport TopBar from './components/TopBar';\nimport FootBar from './components/FootBar'\nimport Main from './components/Main'\nimport Nosotros from './components/Nosotros'\nimport Topic from \"./components/Topic\";\nimport Publications from \"./components/Publications\";\nimport NavBarBottom from \"./components/NavBarBottom\";\nimport \"./App.css\";\n\nfunction App() {\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n      Promise.all([\n        fetch('https://mundodeltrabajo.org/wp-json/wp/v2/posts?per_page=100&_fields=id,date,slug,title,categories,acf,yoast_head_json.og_image,content,tags'),\n        fetch('https://mundodeltrabajo.org/wp-json/wp/v2/categories?per_page=100&_fields=id,name'),\n        fetch('https://mundodeltrabajo.org/wp-json/wp/v2/tags?per_page=100&page=1&_fields=id,name'),\n        fetch('https://mundodeltrabajo.org/wp-json/wp/v2/tags?per_page=100&page=2&_fields=id,name')\n      ])\n      .then(([postResponse, categoriesResponse, tagsResponse1, tagsResponse2]) => \n        Promise.all([postResponse.json(), categoriesResponse.json(), tagsResponse1.json(), tagsResponse2.json()])\n      )\n      .then(([posts, categories, tags1, tags2]) => {\n\n        // Crear un mapa de categorías y tags para buscar fácilmente por id\n        let categoriesMap = {};\n        categories.forEach(category => {\n          categoriesMap[category.id] = category.name;\n        });\n        let tags = tags1.concat(tags2)\n\n        let tagsMap = {};\n        tags.forEach(tag => {\n          tagsMap[tag.id] = tag.name;\n        });\n\n        // Mapear los números de categorías en los nombres correspondientes\n        let postsWithNames = posts.map(post => ({\n          ...post,\n          categories: post.categories ? post.categories.map(categoryId => categoriesMap[categoryId]) : [],\n          tags: post.tags ? post.tags.map(tagId => tagsMap[tagId]) : [],\n        }));\n        \n        setPosts(postsWithNames);\n      })\n      .catch(err => console.log(err));\n    }, []);\n\n  \n  return (\n    <BrowserRouter>\n        <NavBarBottom />\n        <TopBar />\n        <div className=\"content-center\">\n          <Routes>            \n              <Route path=\"/\" element={<Main  posts={posts} />} />\n              <Route path=\"/noticias\" element={<Publications defaultSection={'noticias'} posts={posts} />} />\n              <Route path=\"/cursos\" element={<Publications defaultSection={'cursos'} posts={posts} />} />\n              <Route path=\"/articulos\" element={<Publications defaultSection={'articulos'} posts={posts} />} />\n              <Route path=\"/videos\" element={<Publications defaultSection={'videos'} posts={posts} />} />\n              <Route path=\"/nosotros\" element={<Nosotros />} />\n              <Route path=\"/post/:slug/\" element={<Topic  posts={posts} />} />\n          </Routes>\n        </div>\n        <FootBar />\n    </BrowserRouter>\n  );\n}\n\nexport default App;","import React from 'react';\r\nimport PublicationsFeed from './PublicationsFeed';\r\nimport PublicationsFeedVideos from './PublicationsFeedVideos'\r\nimport PublicationsFeedCourses from './PublicationsFeedCourses'\r\n\r\nconst ActiveSection = ({section, posts}) => {\r\n  // Mapea las secciones a las categorías correspondientes\r\n  const sectionToCategory = {\r\n    noticias: \"Noticias\",\r\n    articulos: \"Notas\",\r\n    videos: \"Videos\",\r\n    cursos: \"Cursos\",\r\n  };\r\n\r\n  // Obtiene la categoría correspondiente a la sección seleccionada\r\n  const selectedCategory = sectionToCategory[section] || \"Noticias\";\r\n\r\n  // Filtra los posts según la categoría seleccionada\r\n  const filteredPosts = posts.filter((post) =>\r\n    post.categories.includes(selectedCategory)\r\n  );\r\n  // return (section === \"Videos\") ? <PublicationsFeedVideos section={section} posts={filteredPosts} /> \r\n  // : (section === \"Cursos\") ? <PublicationsFeedCourses section={section} posts={filteredPosts} />\r\n  // : <PublicationsFeed section={section} posts={filteredPosts} />;\r\n  return <PublicationsFeed section={section} posts={filteredPosts} />;\r\n}\r\n\r\nexport default ActiveSection","import React from 'react';\r\n\r\nfunction Columna(props){\r\n    return(\r\n        <div className='columna' style={{paddingTop:'10px'}}>\r\n            <h3 style={{color: 'white', backgroundColor:'grey'}}>{props.titulo}</h3>\r\n            <h2>hola</h2>       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Columna","import React from 'react';\r\n\r\nfunction FootBar(){\r\n    return(\r\n        \r\n        <div className=\"footbar\" style={{ backgroundColor: 'black'}}>\r\n            <div style={{ display:'flex' }}>\r\n                <p style={{ fontSize:'1rem', color: 'white', margin:'11px auto' }}>Derechos Reservados &copy; {new Date().getFullYear()}</p>\r\n            </div>\r\n            <div className=\"footbar-info-section\">\r\n                <div className='footbar-info-section-box'>\r\n                    <p>Locación</p>\r\n                    <p>telefono</p>\r\n                    <p>mail</p>\r\n                    <p>redes sociales</p>\r\n                </div>\r\n                <div className='footbar-info-section-box'>\r\n                    <p>otros sitios</p>\r\n                </div>\r\n                <div className='footbar-info-section-box'>\r\n                    <p>Informacion extra</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FootBar","import React from 'react'\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div className='loading'>\r\n        <img src={process.env.PUBLIC_URL + '/images/7.svg'} alt='loading' />        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\nimport NewsCarousel from './NewsCarousel';\r\nimport Columna from './Columna';\r\nimport MainCourses from './MainCourses';\r\n\r\nfunction Main({posts}){\r\n    const hasActiveCategory = posts.some(post => post.categories.includes(\"Activos\") || post.categories.includes(\"Inscripciones Activas\"));\r\n    const activeInscriptions = posts.filter(course => course.categories.includes(\"Inscripciones Activas\"))\r\n    const activeCourses = posts.filter(course => course.categories.includes('Activos'))\r\n    \r\n    return(\r\n        <div className='main'>\r\n            <div className='news'><NewsCarousel posts={posts} /></div>\r\n            {hasActiveCategory && (\r\n                <div className='courses-news'>\r\n                    <MainCourses courses={activeCourses} inscriptions={activeInscriptions} />\r\n                </div>\r\n            )}\r\n            <div className='columnasMain'>\r\n                <Columna titulo='Esta es columna izquierda' posts={posts} />\r\n                <Columna titulo='Esta es mi columna columna' posts={posts} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport MainCoursesCard from './MainCoursesCard';\r\n\r\nfunction MainCourses({courses, inscriptions}) {\r\n  const renderTwoCourses = courses.length >= 2;\r\n  const renderTwoInscriptions = inscriptions.length >= 2;\r\n  const showSplitter = courses.length > 0 && inscriptions.length > 0;\r\n\r\n  return (\r\n    <>\r\n      {renderTwoInscriptions ? (\r\n        <>\r\n          <div className='courses-inscriptions-main-title'>Inscripciones Activas</div>\r\n          <div className='courses-inscriptions-main'>\r\n            <MainCoursesCard course={inscriptions[0]} className=\"course-card-l\" />\r\n            <div className=\"splitter-line\"></div>\r\n            <MainCoursesCard course={inscriptions[1]} className=\"course-card-r\" />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className='courses-inscriptions-main-title'>Inscripciones Activas</div>\r\n          <div className='courses-inscriptions-main'>\r\n            <MainCoursesCard course={inscriptions[0]} />\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {showSplitter && <div className=\"courses-inscriptions-splitter\"></div>}\r\n\r\n      {renderTwoCourses ? (\r\n        <>\r\n          <div className='courses-inscriptions-main-title'>Cursos Activos</div>\r\n          <div className='courses-inscriptions-main'>\r\n            <MainCoursesCard course={courses[0]} className=\"course-card-l\" />\r\n            <div className=\"splitter-line\"></div>\r\n            <MainCoursesCard course={courses[1]} className=\"course-card-r\" />\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className='courses-inscriptions-main-title'>Cursos Activos</div>\r\n          <div className='courses-inscriptions-main'>\r\n            <MainCoursesCard course={courses[0]} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainCourses","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MainCoursesCard(props) {\r\n  return (\r\n    <Link className={`course-link ${props.className}`} to={`/post/${props.course.slug}/`} >\r\n      <div className={'course-link-div'}>{props.course.title.rendered}</div>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default MainCoursesCard","import React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction NavBarBottom(props) {\r\n    return(\r\n        <div className=\"nv-bottom\">\r\n            <div className=\"nv-bottom-wrap\">\r\n                <div className=\"nv-bottom-bt\">\r\n                    <Link to={'/'}>\r\n                        <span class=\"material-symbols-outlined\">home</span>\r\n                        <p>Inicio</p>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nv-bottom-bt\">\r\n                    <Link to={'/noticias'}>\r\n                        <span class=\"material-symbols-outlined\">view_cozy</span>\r\n                        <p>Publicaciones</p>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"nv-bottom-bt\">\r\n                    <Link to={'/autoridades'}>\r\n                        <span class=\"material-symbols-outlined\">group</span>\r\n                        <p>Autoridades</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBarBottom","import React from \"react\";\r\nimport NewsCarouselCard from './NewsCarouselCard'\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport 'swiper/swiper-bundle.css'\r\nimport { EffectFade, Navigation, Autoplay } from \"swiper\";\r\n\r\n\r\nfunction NewsCarousel(props){\r\n  const onlyPosts = props.posts.filter(post => !post.categories.includes('Cursos'))\r\n\r\n  return(\r\n      <div className=\"nov-carousel\"> \r\n        <Swiper\r\n          autoplay={{delay: 6000, disableOnInteraction: false}}\r\n          navigation={true}\r\n          effect={\"fade\"}\r\n          modules={[ Autoplay, EffectFade, Navigation ]}\r\n          className=\"mySwiperNews\"\r\n        >\r\n          {onlyPosts.slice(0, 7).map(post => (<SwiperSlide className=\"ss-news\" key={post.slug} style={{backgroundImage: `url(${post.yoast_head_json.og_image[0].url})`}}> <NewsCarouselCard post={post} /> </SwiperSlide>))}\r\n        </Swiper>\r\n      </div>\r\n  )\r\n}\r\nexport default NewsCarousel","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NewsCarouselCard(props) {\r\n\r\n  return (\r\n      <Link className=\"news-link\" to={`/post/${props.post.slug}/`} >\r\n        <div className='news-link-card'>\r\n          <h5>{props.post.categories[0]}</h5>\r\n          <h1>{props.post.title.rendered}</h1>\r\n        </div>\r\n      </Link>\r\n    )\r\n\r\n}\r\n\r\nexport default NewsCarouselCard","import React from 'react';\r\n\r\nfunction Nosotros(props) {\r\n    return(\r\n        <div style={{width: '70%', paddingTop: '20px', marginLeft: 'auto', marginRight: 'auto', backgroundColor: '#6fcaf6'}}>\r\n        <h1 style={{textAlign: \"center\"}} >Historia</h1>\r\n        <div style={{textAlign: \"justify\", marginLeft: '10%', marginRight: '10%'}} > <p><span style={{fontSize: '1.3rem', textDecoration: 'underline solid black'}}>El INSTITUTO DEL MUNDO DEL TRABAJO</span> es un ámbito de investigación, estudio, capacitación y de promoción de políticas públicas fundado en el año 1998 por el sociólogo Lic. Julio Godio. Su principal campo de actuación es precisamente el mundo del trabajo, entendiendo por tal el integrado por el movimiento sindical, las empresas, las instituciones de innovación tecnológica, las universidades y las instituciones del sistema internacional en general y particularmente la Organización Internacional del Trabajo. Asimismo, el Instituto promueve el diálogo social y político en general y la negociación colectiva en particular. El Instituto es independiente de cualquier orientación política y sindical. Promueve el fortalecimiento de las organizaciones sindicales, la promoción de empresas productivas, el diálogo y el mejoramiento de las relaciones  laborales y el respeto a los derechos fundamentales del trabajo, en el marco del desarrollo sostenible.</p></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nosotros","import React from 'react'\r\nimport ActiveSection from './ActiveSection'\r\nimport { Link, useLocation } from 'react-router-dom'\r\n\r\nconst Publications = ({defaultSection, posts}) => {\r\n\r\n  const location = useLocation();\r\n  const [section, setSection] = React.useState(defaultSection ?? 'noticias')\r\n  React.useEffect( () => {\r\n    // Actualiza la sección basada en la ruta actual\r\n    const path = location.pathname;\r\n    if (path === '/noticias') {\r\n      setSection('noticias');\r\n    } else if (path === '/articulos') {\r\n      setSection('articulos');\r\n    } else if (path === '/cursos') {\r\n      setSection('cursos');\r\n    } else if (path === '/videos') {\r\n      setSection('videos');\r\n    }\r\n  }, [location.pathname])\r\n  \r\n  return (\r\n    <>\r\n      <nav className='publications-nav' >\r\n        <Link to={'/noticias'}><button className={section === 'noticias' ? 'active' : ''}>Noticias</button></Link>\r\n        <Link to={'/articulos'}><button className={section === 'articulos' ? 'active' : ''}>Articulos</button></Link>\r\n        <Link to={'/videos'}><button className={section === 'videos' ? 'active' : ''}>Videos</button></Link>\r\n        <Link to={'/cursos'}><button className={section === 'cursos' ? 'active' : ''}>Cursos</button></Link>\r\n        {/* otros botones */}\r\n      </nav>\r\n      <section>\r\n        <ActiveSection section={section} posts={posts} />\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Publications","import React, { useState, useEffect } from 'react'\r\nimport PublicationsFeedCard from './PublicationsFeedCard'\r\n\r\nfunction PublicationsFeed({ posts }) {\r\n  const [sortedPosts, setSortedPosts] = useState(posts);\r\n  const [uniqueAuthors, setUniqueAuthors] = useState([])\r\n  const [authorSuggestions, setAuthorSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [dateOrder, setDateOrder] = useState(true);\r\n  const listHeight = showSuggestions && authorSuggestions.length > 0 ? authorSuggestions.length * 24 + 'px' : '0';\r\n\r\n\r\n  useEffect(() => {\r\n    resetFilters();\r\n  }, [posts]);\r\n\r\n  const resetFilters = () => {\r\n    setSortedPosts(posts);\r\n    setInputValue('');\r\n    const allAuthors = posts\r\n      .flatMap((post) => [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4])\r\n      .filter((authors) => authors !== null && authors !== \"\")\r\n      .flat();\r\n    setUniqueAuthors([...new Set(allAuthors)])\r\n    setAuthorSuggestions([...new Set(allAuthors)]);\r\n    setDateOrder();\r\n  };\r\n  console.log(authorSuggestions)\r\n\r\n  //Implementación para normalizar mayúsculas y acentos\r\n  const removeAccents = (str) => {\r\n    return str\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .toLowerCase();\r\n  };\r\n\r\n  //Acciones según el \"value\" que se encuentre en el <Input>\r\n  const handleAuthorInputChange = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInputValue(inputValue); //Setea el inputValue según el target.value\r\n    const filteredAuthors = uniqueAuthors.filter((author) =>\r\n      removeAccents(author).includes(removeAccents(inputValue))\r\n    );\r\n    event.target.value === '' ? setShowSuggestions(false) : setShowSuggestions(true);\r\n    setAuthorSuggestions(filteredAuthors);\r\n    const filteredPosts = inputValue\r\n    ? posts.filter((post) => {\r\n      const authorFields = [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4];\r\n      return authorFields.some(\r\n        (authorField) =>\r\n          authorField && removeAccents(authorField).includes(removeAccents(inputValue))\r\n      );\r\n    })\r\n    : posts;\r\n    setSortedPosts(filteredPosts);\r\n  };\r\n\r\n  const toggleOrder = () => {\r\n    setDateOrder(!dateOrder);\r\n  \r\n    // Ordenar los posts según el nuevo orden\r\n    const sorted = [...sortedPosts].sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n  \r\n      if (dateOrder) {\r\n        return dateB - dateA; // Orden descendente\r\n      } else {\r\n        return dateA - dateB; // Orden ascendente\r\n      }\r\n    });\r\n  \r\n    setSortedPosts(sorted);\r\n  };\r\n\r\n  //Implementación para \r\n  const selectAuthor = (selectedAuthor) => {\r\n    setShowSuggestions(false);\r\n    setInputValue(selectedAuthor);\r\n    const filtered = posts.filter((post) => {\r\n      const authorFields = [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4];\r\n      return authorFields.some(\r\n        (authorField) =>\r\n          authorField && removeAccents(authorField).includes(removeAccents(selectedAuthor))\r\n      ) \r\n    });\r\n    setSortedPosts(filtered);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sorting-options\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Author\"\r\n          value={inputValue}\r\n          onInput={handleAuthorInputChange}\r\n        />\r\n        <span className=\"material-symbols-rounded\" onClick={toggleOrder} style={dateOrder ? {transform: 'rotateX(180deg)'} : {transform: 'rotateX(0deg)'}}>sort</span>\r\n        <ul className=\"author-suggestions\" style={{ height: listHeight }}>\r\n          {authorSuggestions.map((author) => (\r\n            <li key={author} onClick={() => selectAuthor(author)}>\r\n              {author}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <ul className=\"publications-list\">\r\n        {sortedPosts.map((post) => (\r\n          <li key={post.id} className={`${post.id} post-feed-card`}>\r\n            <PublicationsFeedCard post={post} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PublicationsFeed;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction PublicationsFeedCard({post}) {\r\n  \r\n  return (\r\n    <Link to={`/post/${post.slug}/`} >\r\n      <div>\r\n        <img className={`ost-feed-card-img ${post.categories}`} src={post.yoast_head_json.og_image[0].url}/>\r\n        {post.title.rendered}\r\n      </div>\r\n      <br/>\r\n      <span class=\"material-symbols-outlined\">calendar_month</span>\r\n      {post.acf.fecha}\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default PublicationsFeedCard","import React, { useState, useEffect } from 'react'\r\nimport PublicationsFeedCard from './PublicationsFeedCard'\r\n\r\nfunction PublicationsFeed({ posts }) {\r\n  const [sortedPosts, setSortedPosts] = useState(posts);\r\n  const [uniqueAuthors, setUniqueAuthors] = useState([])\r\n  const [authorSuggestions, setAuthorSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [dateOrder, setDateOrder] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    resetFilters();\r\n  }, [posts]);\r\n\r\n  const resetFilters = () => {\r\n    setSortedPosts(posts);\r\n    setInputValue('');\r\n    const allAuthors = posts\r\n      .flatMap((post) => [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4])\r\n      .filter((authors) => authors !== null)\r\n      .flat();\r\n    setUniqueAuthors([...new Set(allAuthors)])\r\n    setAuthorSuggestions([...new Set(allAuthors)]);\r\n    setDateOrder();\r\n  };\r\n  console.log(authorSuggestions)\r\n\r\n  //Implementación para normalizar mayúsculas y acentos\r\n  const removeAccents = (str) => {\r\n    return str\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .toLowerCase();\r\n  };\r\n\r\n  //Acciones según el \"value\" que se encuentre en el <Input>\r\n  const handleAuthorInputChange = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInputValue(inputValue); //Setea el inputValue según el target.value\r\n    const filteredAuthors = uniqueAuthors.filter((author) =>\r\n      removeAccents(author).includes(removeAccents(inputValue))\r\n    );\r\n    event.target.value === '' ? setShowSuggestions(false) : setShowSuggestions(true);\r\n    setAuthorSuggestions(filteredAuthors);\r\n    const filteredPosts = inputValue\r\n      ? posts.filter((post) => {\r\n        const authorFields = [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4];\r\n        return authorFields.some(\r\n          (authorField) =>\r\n            authorField && removeAccents(authorField).includes(removeAccents(inputValue))\r\n        );\r\n      })\r\n      : posts;\r\n    setSortedPosts(filteredPosts);\r\n  };\r\n\r\n  const toggleOrder = () => {\r\n    setDateOrder(!dateOrder);\r\n  \r\n    // Ordenar los posts según el nuevo orden\r\n    const sorted = [...sortedPosts].sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n  \r\n      if (dateOrder) {\r\n        return dateB - dateA; // Orden descendente\r\n      } else {\r\n        return dateA - dateB; // Orden ascendente\r\n      }\r\n    });\r\n  \r\n    setSortedPosts(sorted);\r\n  };\r\n\r\n  //Implementación para \r\n  const selectAuthor = (selectedAuthor) => {\r\n    setShowSuggestions(false);\r\n    setInputValue(selectedAuthor);\r\n    const filtered = posts.filter((post) => {\r\n      const authorFields = [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4];\r\n      return authorFields.some(\r\n        (authorField) =>\r\n          authorField && removeAccents(authorField).includes(removeAccents(selectedAuthor))\r\n      ) \r\n    });\r\n    setSortedPosts(filtered);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sorting-options\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Author\"\r\n          value={inputValue}\r\n          onInput={handleAuthorInputChange}\r\n        />\r\n        <button onClick={toggleOrder}>\r\n         Ordenar {dateOrder ? 'Ascendente' : 'Descendente'}\r\n        </button>\r\n        {showSuggestions && authorSuggestions.length > 0 && (\r\n          <ul className=\"author-suggestions\">\r\n            {authorSuggestions.map((author) => (\r\n              <li key={author} onClick={() => selectAuthor(author)}>\r\n                {author}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <ul className=\"publications-list\">\r\n        {sortedPosts.map((post) => (\r\n          <li key={post.id} className={`${post.id} post-feed-card`}>\r\n            <PublicationsFeedCard post={post} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PublicationsFeed;","import React, { useState, useEffect } from 'react'\r\nimport PublicationsFeedCard from './PublicationsFeedCard'\r\n\r\nfunction PublicationsFeed({ posts }) {\r\n  const [sortedPosts, setSortedPosts] = useState(posts);\r\n  const [uniqueAuthors, setUniqueAuthors] = useState([])\r\n  const [authorSuggestions, setAuthorSuggestions] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [dateOrder, setDateOrder] = useState(true);\r\n\r\n\r\n  useEffect(() => {\r\n    resetFilters();\r\n  }, [posts]);\r\n\r\n  const resetFilters = () => {\r\n    setSortedPosts(posts);\r\n    setInputValue('');\r\n    const allAuthors = posts\r\n      .flatMap((post) => [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4])\r\n      .filter((authors) => authors !== null)\r\n      .flat();\r\n    setUniqueAuthors([...new Set(allAuthors)])\r\n    setAuthorSuggestions([...new Set(allAuthors)]);\r\n    setDateOrder();\r\n  };\r\n  console.log(authorSuggestions)\r\n\r\n  //Implementación para normalizar mayúsculas y acentos\r\n  const removeAccents = (str) => {\r\n    return str\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .toLowerCase();\r\n  };\r\n\r\n  //Acciones según el \"value\" que se encuentre en el <Input>\r\n  const handleAuthorInputChange = (event) => {\r\n    const inputValue = event.target.value;\r\n    setInputValue(inputValue); //Setea el inputValue según el target.value\r\n    const filteredAuthors = uniqueAuthors.filter((author) =>\r\n      removeAccents(author).includes(removeAccents(inputValue))\r\n    );\r\n    event.target.value === '' ? setShowSuggestions(false) : setShowSuggestions(true);\r\n    setAuthorSuggestions(filteredAuthors);\r\n    const filteredPosts = inputValue\r\n      ? posts.filter((post) => {\r\n        const authorFields = [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4];\r\n        return authorFields.some(\r\n          (authorField) =>\r\n            authorField && removeAccents(authorField).includes(removeAccents(inputValue))\r\n        );\r\n      })\r\n      : posts;\r\n    setSortedPosts(filteredPosts);\r\n  };\r\n\r\n  const toggleOrder = () => {\r\n    setDateOrder(!dateOrder);\r\n  \r\n    // Ordenar los posts según el nuevo orden\r\n    const sorted = [...sortedPosts].sort((a, b) => {\r\n      const dateA = new Date(a.date);\r\n      const dateB = new Date(b.date);\r\n  \r\n      if (dateOrder) {\r\n        return dateB - dateA; // Orden descendente\r\n      } else {\r\n        return dateA - dateB; // Orden ascendente\r\n      }\r\n    });\r\n  \r\n    setSortedPosts(sorted);\r\n  };\r\n\r\n  //Implementación para \r\n  const selectAuthor = (selectedAuthor) => {\r\n    setShowSuggestions(false);\r\n    setInputValue(selectedAuthor);\r\n    const filtered = posts.filter((post) => {\r\n      const authorFields = [post.acf.autor1, post.acf.autor2, post.acf.autor3, post.acf.autor4];\r\n      return authorFields.some(\r\n        (authorField) =>\r\n          authorField && removeAccents(authorField).includes(removeAccents(selectedAuthor))\r\n      ) \r\n    });\r\n    setSortedPosts(filtered);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"sorting-options\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter by Author\"\r\n          value={inputValue}\r\n          onInput={handleAuthorInputChange}\r\n        />\r\n        <button onClick={toggleOrder}>\r\n         Ordenar {dateOrder ? 'Ascendente' : 'Descendente'}\r\n        </button>\r\n        {showSuggestions && authorSuggestions.length > 0 && (\r\n          <ul className=\"author-suggestions\">\r\n            {authorSuggestions.map((author) => (\r\n              <li key={author} onClick={() => selectAuthor(author)}>\r\n                {author}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <ul className=\"publications-list\">\r\n        {sortedPosts.map((post) => (\r\n          <li key={post.id} className={`${post.id} post-feed-card`}>\r\n            <PublicationsFeedCard post={post} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PublicationsFeed;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction TopBar(){\r\n    return(\r\n        <>\r\n            <div className='tb-top'>\r\n                <div className=\"logoslider\">\r\n                    <div className=\"logos\">\r\n                        <Link to={'/'} >\r\n                            <img className='logo-phone' src={process.env.PUBLIC_URL + '/images/PHONE_UNTREF_LOGO.png'} alt=\"Logo UNTREF\" width=\"90\" height=\"30\" />\r\n                            <img className='logo-phone' src={process.env.PUBLIC_URL + '/images/PHONE_IMT_LOGO1.png'} alt=\"Logo IMT\" width=\"67\" height=\"30\" />\r\n                            <img className='logo' src={process.env.PUBLIC_URL + '/images/IMT_LOGO1.png'} alt=\"Logo IMT\" width=\"120\" height=\"60\" />\r\n                            <img className='logo' src={process.env.PUBLIC_URL + '/images/IMT_LOGO2.png'} alt=\"Logo UNTREF\" width=\"154\" height=\"60\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" style={{padding:'0'}}>\r\n                <div className=\"container-fluid\" style={{padding:'0'}}>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" style={{padding:'0', justifyContent: 'center', background: 'linear-gradient(#24ABFF 0%, #0E4466 100%'}}>\r\n                        <ul className=\"navbar-nav\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active link\" aria-current=\"page\" to={'/'}>Inicio</Link>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"nav-link dropdown-toggle link\" to={'/publicaciones'} id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> \r\n                                    Publicaciones\r\n                                </Link>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><Link className=\"dropdown-item\" to={'/noticias'}>Noticias</Link></li>\r\n                                    <li><Link className=\"dropdown-item\" to={'/articulos'}>Artículos</Link></li>\r\n                                    <li><Link className=\"dropdown-item\" to={'/videos'}>Videos</Link></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><Link className=\"dropdown-item\" to={'/cursos'}>Cursos</Link></li>\r\n                                </ul>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"nav-link dropdown-toggle link\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Quienes Somos\r\n                                </Link>\r\n                                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <li><Link className=\"dropdown-item\" to={'/autoridades'}>Autoridades</Link></li> \r\n                                    <li><Link className=\"dropdown-item\" to={'/nosotros/'}>Nosotros</Link></li> \r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TopBar","import React from 'react'\r\nimport { useParams } from \"react-router-dom\";\r\nimport Loading from \"./Loading\";\r\n\r\nfunction Topic(props) {\r\n    const { slug } = useParams()\r\n    const data = props.posts.filter(post => post.slug === `${slug}`).shift()\r\n\r\n\r\n    console.log(data)\r\n\r\n    if (data) {\r\n        return(\r\n            <div className='topic'>\r\n                <div className='topic-head' style={{ backgroundImage: `url(${data.yoast_head_json.og_image[0].url})` }}>\r\n                    <div className='topic-title-and-author'>\r\n                        <div className='topic-title'>\r\n                            <h1 style={{fontSize: '3.5rem'}}> {data?.title.rendered} </h1>\r\n                        </div>\r\n                        <div className='topic-author-and-date'>\r\n                            <h2 style={{margin: '15px'}}> {data?.acf.autor1} </h2>\r\n                            <h2 style={{margin: '15px'}}> {data?.acf.fecha} </h2>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='topic-separator' />\r\n                <div className='topic-text' dangerouslySetInnerHTML={{__html: data?.content.rendered}} />\r\n            </div>\r\n        )\r\n\r\n     } else {\r\n        return(\r\n            <Loading /> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Topic","// extracted by mini-css-extract-plugin","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst root = createRoot(document.getElementById('root'))\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAHA;AAMA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;ACxHA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACrCA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAKA;AACA,eA8BA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}